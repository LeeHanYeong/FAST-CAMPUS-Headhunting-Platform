# Generated by Django 2.1.3 on 2018-11-06 14:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('type', models.CharField(choices=[('a', '지원자'), ('c', '참여기업')], max_length=1, verbose_name='타입')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='이메일')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, verbose_name='전화번호')),
                ('birth_date', models.DateField(verbose_name='생년월일')),
                ('introduce', models.TextField(blank=True, verbose_name='소개')),
                ('_company_name', models.CharField(blank=True, max_length=80, verbose_name='회사명')),
                ('_position', models.CharField(blank=True, max_length=50, verbose_name='직책')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자 목록',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='ApplicantLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='주소')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicantSkill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('high', '매우능숙'), ('mid', '능숙'), ('low', '활용가능')], max_length=5, verbose_name='숙련도')),
            ],
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='시작일자')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='종료일자')),
                ('content', models.TextField(verbose_name='내역')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='지원자')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='시작일자')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='종료일자')),
                ('content', models.TextField(verbose_name='내역')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='지원자')),
            ],
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('get_date', models.DateField(verbose_name='취득일자')),
                ('organization', models.CharField(max_length=100, verbose_name='발급기관')),
                ('title', models.CharField(max_length=100, verbose_name='이름')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='지원자')),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, verbose_name='링크타입명')),
                ('img_icon', models.ImageField(blank=True, upload_to='link', verbose_name='아이콘')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='기술명')),
            ],
        ),
        migrations.AddField(
            model_name='applicantskill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='members.Skill'),
        ),
        migrations.AddField(
            model_name='applicantskill',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', related_query_name='skill', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='applicantlink',
            name='link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='members.Link'),
        ),
        migrations.AddField(
            model_name='applicantlink',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='links', related_query_name='link', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='_links',
            field=models.ManyToManyField(blank=True, related_name='users', related_query_name='user', through='members.ApplicantLink', to='members.Link', verbose_name='링크 목록'),
        ),
        migrations.AddField(
            model_name='user',
            name='_skills',
            field=models.ManyToManyField(blank=True, related_name='users', related_query_name='user', through='members.ApplicantSkill', to='members.Skill', verbose_name='보유 기술 목록'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='ApplicantUser',
            fields=[
            ],
            options={
                'verbose_name': '지원자',
                'verbose_name_plural': '지원자 목록',
                'proxy': True,
                'indexes': [],
            },
            bases=('members.user',),
        ),
        migrations.CreateModel(
            name='CompanyUser',
            fields=[
            ],
            options={
                'verbose_name': '기업회원',
                'verbose_name_plural': '기업회원 목록',
                'proxy': True,
                'indexes': [],
            },
            bases=('members.user',),
        ),
    ]
